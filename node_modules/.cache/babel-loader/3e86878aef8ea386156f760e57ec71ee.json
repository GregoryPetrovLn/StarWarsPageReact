{"ast":null,"code":"var _jsxFileName = \"/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Weather.js\";\nimport React from \"react\";\n\nconst Weather = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoWeath\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 17\n    }\n  }, !props.info.error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Location: \", props.info.city, \" \", props.info.country), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, \"Temp: \", props.info.temp), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Pressure: \", props.info.pressure), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Sunset: \", new Date(props.info.sunset * 1000).toTimeString())), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, props.info.error));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Weather.js"],"names":["React","Weather","props","info","error","city","country","temp","pressure","Date","sunset","toTimeString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGC,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAChB,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACA,KAAK,CAACC,IAAN,CAAWC,KAAZ,iBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,KAAK,CAACC,IAAN,CAAWE,IAAzB,OAAgCH,KAAK,CAACC,IAAN,CAAWG,OAA3C,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUJ,KAAK,CAACC,IAAN,CAAWI,IAArB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcL,KAAK,CAACC,IAAN,CAAWK,QAAzB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAa,IAAIC,IAAJ,CAAUP,KAAK,CAACC,IAAN,CAAWO,MAAX,GAAoB,IAA9B,EAAoCC,YAApC,EAAb,CAJJ,CAFI,eASR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,KAAK,CAACC,IAAN,CAAWC,KAAf,CATQ,CADJ;AAaX,CAdA;;AAgBD,eAAeH,OAAf","sourcesContent":["import React from \"react\";\n\n\n const Weather = (props) => {\n            return (\n                <div className='infoWeath'>\n                {!props.info.error &&\n            <div>\n                <p>Location: {props.info.city} {props.info.country}</p>\n                <p>Temp: {props.info.temp}</p>\n                <p>Pressure: {props.info.pressure}</p>\n                <p>Sunset: { new Date( props.info.sunset * 1000).toTimeString()}</p>\n            </div>\n        }\n        <p>{props.info.error}</p>\n            </div>\n            );\n};\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}