{"ast":null,"code":"var _jsxFileName = \"/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Form.js\";\nimport React from \"react\";\nimport { API_KEY, base_url } from \"../utils/Constants\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGetCity = e => {\n      e.preventDefault();\n      let city = e.currentTarget.city.value;\n      console.log(city);\n      fetch(`${base_url}?q=${city}&appid=${API_KEY}&units=metric`).then(response => response.json()).then(data => this.setState({\n        weatherInfo: {\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          sunset: data.sys.sunset\n        }\n      }));\n    };\n\n    this.state = {\n      weatherInfo: {\n        temp: null,\n        city: null,\n        country: null,\n        pressure: null,\n        sunset: null\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleGetCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      placeholder: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Get weather\"));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Form.js"],"names":["React","API_KEY","base_url","Form","Component","constructor","props","handleGetCity","e","preventDefault","city","currentTarget","value","console","log","fetch","then","response","json","data","setState","weatherInfo","temp","main","name","country","sys","pressure","sunset","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,oBAAhC;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,aAbmB,GAaFC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,IAAI,GAAGF,CAAC,CAACG,aAAF,CAAgBD,IAAhB,CAAqBE,KAAhC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAK,MAAAA,KAAK,CAAE,GAAEb,QAAS,MAAKQ,IAAK,UAAST,OAAQ,eAAxC,CAAL,CACKe,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAC;AACjCC,UAAAA,IAAI,EAAEH,IAAI,CAACI,IAAL,CAAUD,IADiB;AAEjCZ,UAAAA,IAAI,EAAES,IAAI,CAACK,IAFsB;AAGjCC,UAAAA,OAAO,EAAEN,IAAI,CAACO,GAAL,CAASD,OAHe;AAIjCE,UAAAA,QAAQ,EAAER,IAAI,CAACI,IAAL,CAAUI,QAJa;AAKjCC,UAAAA,MAAM,EAAET,IAAI,CAACO,GAAL,CAASE;AALgB;AAAb,OAAd,CAFlB;AASH,KA1BkB;;AAEf,SAAKC,KAAL,GAAW;AACPR,MAAAA,WAAW,EAAE;AACTC,QAAAA,IAAI,EAAE,IADG;AAETZ,QAAAA,IAAI,EAAE,IAFG;AAGTe,QAAAA,OAAO,EAAE,IAHA;AAITE,QAAAA,QAAQ,EAAE,IAJD;AAKTC,QAAAA,MAAM,EAAE;AALC;AADN,KAAX;AASH;;AAkBDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKvB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ;AAMH;;AArC6B;;AAwClC,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\nimport {API_KEY, base_url} from \"../utils/Constants\";\n\nclass Form extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            weatherInfo: {\n                temp: null,\n                city: null,\n                country: null,\n                pressure: null,\n                sunset: null\n            }\n        }\n    }\n\n    handleGetCity = (e) => {\n        e.preventDefault();\n        let city = e.currentTarget.city.value;\n        console.log(city);\n        fetch(`${base_url}?q=${city}&appid=${API_KEY}&units=metric`)\n            .then(response => response.json())\n            .then(data => this.setState({weatherInfo:{\n                    temp: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    pressure: data.main.pressure,\n                    sunset: data.sys.sunset\n                }}))\n    };\n\n\n    render() {\n        return (\n            <form onSubmit={this.handleGetCity}>\n                <input type='text' name='city' placeholder='City'/>\n                <button type='submit'>Get weather</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}