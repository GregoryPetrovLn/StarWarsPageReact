{"ast":null,"code":"var _jsxFileName = \"/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Weather.js\";\nimport React from \"react\";\n\nconst Weather = ({\n  info\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoWeath\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 17\n    }\n  }, !info.error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Location: \", info.city, \" \", info.country), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, \"Temp: \", info.temp), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Pressure: \", info.pressure), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Sunset: \", new Date(info.sunset * 1000).toTimeString())), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, info.error));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Weather.js"],"names":["React","Weather","info","error","city","country","temp","pressure","Date","sunset","toTimeString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGC,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACjB,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACA,IAAI,CAACC,KAAN,iBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcD,IAAI,CAACE,IAAnB,OAA0BF,IAAI,CAACG,OAA/B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUH,IAAI,CAACI,IAAf,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcJ,IAAI,CAACK,QAAnB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAa,IAAIC,IAAJ,CAAUN,IAAI,CAACO,MAAL,GAAc,IAAxB,EAA8BC,YAA9B,EAAb,CAJJ,CAFI,eASR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,IAAI,CAACC,KAAT,CATQ,CADJ;AAaX,CAdA;;AAgBD,eAAeF,OAAf","sourcesContent":["import React from \"react\";\n\n\n const Weather = ({info}) => {\n            return (\n                <div className='infoWeath'>\n                {!info.error &&\n            <div>\n                <p>Location: {info.city} {info.country}</p>\n                <p>Temp: {info.temp}</p>\n                <p>Pressure: {info.pressure}</p>\n                <p>Sunset: { new Date( info.sunset * 1000).toTimeString()}</p>\n            </div>\n        }\n        <p>{info.error}</p>\n            </div>\n            );\n};\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}