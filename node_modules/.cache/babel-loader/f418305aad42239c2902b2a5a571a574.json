{"ast":null,"code":"var _jsxFileName = \"/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Data.js\";\nimport React from \"react\";\nimport Form from \"./Form\";\nimport Weather from \"./Weather\";\nimport { API_KEY, base_url } from \"../utils/Constants\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async city => {\n      try {\n        const response = await fetch(`${base_url}?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await response.json();\n        this.setState({\n          weatherInfo: {\n            temp: data.main.temp,\n            city: data.name,\n            country: data.sys.country,\n            pressure: data.main.pressure,\n            sunset: data.sys.sunset,\n            error: null\n          }\n        });\n      } catch (e) {\n        this.setState({\n          weatherInfo: {\n            temp: null,\n            city: null,\n            country: null,\n            pressure: null,\n            sunset: null,\n            error: 'Enter city name'\n          }\n        });\n      }\n    };\n\n    this.state = {\n      weatherInfo: {\n        temp: null,\n        city: null,\n        country: null,\n        pressure: null,\n        sunset: null\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      handleWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      info: this.state.weatherInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Data;","map":{"version":3,"sources":["/Users/gregorypetrov/Documents/WebStorm/25-react-wether/src/components/Data.js"],"names":["React","Form","Weather","API_KEY","base_url","Data","Component","constructor","props","getWeather","city","response","fetch","data","json","setState","weatherInfo","temp","main","name","country","sys","pressure","sunset","error","e","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,oBAAhC;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,UAbmB,GAaN,MAAOC,IAAP,IAAgB;AACzB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,QAAS,MAAKM,IAAK,UAASP,OAAQ,eAAxC,CAA5B;AACA,cAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAKC,QAAL,CAAc;AACVC,UAAAA,WAAW,EAAE;AACTC,YAAAA,IAAI,EAAEJ,IAAI,CAACK,IAAL,CAAUD,IADP;AAETP,YAAAA,IAAI,EAAEG,IAAI,CAACM,IAFF;AAGTC,YAAAA,OAAO,EAAEP,IAAI,CAACQ,GAAL,CAASD,OAHT;AAITE,YAAAA,QAAQ,EAAET,IAAI,CAACK,IAAL,CAAUI,QAJX;AAKTC,YAAAA,MAAM,EAAEV,IAAI,CAACQ,GAAL,CAASE,MALR;AAMTC,YAAAA,KAAK,EAAE;AANE;AADH,SAAd;AAUH,OAbD,CAaE,OAAOC,CAAP,EAAU;AACR,aAAKV,QAAL,CAAc;AACNC,UAAAA,WAAW,EAAE;AACTC,YAAAA,IAAI,EAAE,IADG;AAETP,YAAAA,IAAI,EAAE,IAFG;AAGTU,YAAAA,OAAO,EAAE,IAHA;AAITE,YAAAA,QAAQ,EAAE,IAJD;AAKTC,YAAAA,MAAM,EAAE,IALC;AAMTC,YAAAA,KAAK,EAAE;AANE;AADP,SAAd;AAWH;AAEJ,KAzCkB;;AAEf,SAAKE,KAAL,GAAa;AACTV,MAAAA,WAAW,EAAE;AACTC,QAAAA,IAAI,EAAE,IADG;AAETP,QAAAA,IAAI,EAAE,IAFG;AAGTU,QAAAA,OAAO,EAAE,IAHA;AAITE,QAAAA,QAAQ,EAAE,IAJD;AAKTC,QAAAA,MAAM,EAAE;AALC;AADJ,KAAb;AASH;;AAgCDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAKlB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKiB,KAAL,CAAWV,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAnD8B;;AAsDnC,eAAeX,IAAf","sourcesContent":["import React from \"react\";\nimport Form from \"./Form\";\nimport Weather from \"./Weather\";\nimport {API_KEY, base_url} from \"../utils/Constants\";\n\nclass Data extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weatherInfo: {\n                temp: null,\n                city: null,\n                country: null,\n                pressure: null,\n                sunset: null\n            }\n        }\n    }\n\n    getWeather = async (city) => {\n        try {\n            const response = await fetch(`${base_url}?q=${city}&appid=${API_KEY}&units=metric`);\n            const data = await response.json();\n            this.setState({\n                weatherInfo: {\n                    temp: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    pressure: data.main.pressure,\n                    sunset: data.sys.sunset,\n                    error: null\n                }\n            });\n        } catch (e) {\n            this.setState({\n                    weatherInfo: {\n                        temp: null,\n                        city: null,\n                        country: null,\n                        pressure: null,\n                        sunset: null,\n                        error: 'Enter city name',\n                    }\n                }\n            )\n        }\n\n    };\n\n    render() {\n        return (\n            <div>\n                <Form handleWeather={this.getWeather}/>\n                <Weather info={this.state.weatherInfo}/>\n            </div>\n        );\n    }\n}\n\nexport default Data;"]},"metadata":{},"sourceType":"module"}